# generated by datamodel-codegen:
#   filename:  index-library.tmp.json
#   timestamp: 2022-08-14T13:21:26+00:00

"""
Can be generated with the help of datamodel_code_generator like so:

# Extract only part of the produced structure (IlidsLibraryIndex.Library)
ilids_library_xml = deep_get(index_xml, "IlidsLibraryIndex.Library")

datamodel_code_generator.generate(
    json.dumps(ilids_library_xml),
    input_file_type=datamodel_code_generator.InputFileType.Json,
    output=Path(".") / "szte.py",
    target_python_version=datamodel_code_generator.PythonVersion.PY_310,
    class_name="IlidsLibrary"
)

# However, a few adaptation are done to improve the typing of certain fields
"""

from __future__ import annotations

import time
from typing import List, Optional, Union

from pydantic import BaseModel


class AlarmItem(BaseModel):
    AlarmDescription: str
    AlarmDuration: time
    Distance: int
    StartTime: time
    SubjectApproachType: str
    SubjectDescription: str
    SubjectOrientation: str


class Alarms(BaseModel):
    Alarm: List[AlarmItem]


class Distractions(BaseModel):
    Distraction: Union[str, List[str]]


class Weather(BaseModel):
    Clouds: Optional[str] = None
    Fog: bool
    Rain: bool
    Snow: bool
    TimeOfDay: str


class ClipItem(BaseModel):
    AlarmEvents: int
    Alarms: Optional[Alarms] = None
    Distractions: Optional[Distractions] = None
    Duration: time
    Stage: int
    Weather: Weather
    filename: str


class IlidsLibrary(BaseModel):
    clip: List[ClipItem]
    dataset: str
    libversion: str
    scenario: str
